# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import services.grpc_service.scheduleService_pb2 as scheduleService__pb2


class ScheduleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getScheduleByGroupId = channel.unary_stream(
            '/com.project.scheduleService.ScheduleService/getScheduleByGroupId',
            request_serializer=scheduleService__pb2.ScheduleRequest.SerializeToString,
            response_deserializer=scheduleService__pb2.ScheduleResponse.FromString,
        )
        self.getScheduleTodayByGroupId = channel.unary_stream(
            '/com.project.scheduleService.ScheduleService/getScheduleTodayByGroupId',
            request_serializer=scheduleService__pb2.ScheduleRequest.SerializeToString,
            response_deserializer=scheduleService__pb2.ScheduleResponse.FromString,
        )


class ScheduleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getScheduleByGroupId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getScheduleTodayByGroupId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScheduleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'getScheduleByGroupId': grpc.unary_stream_rpc_method_handler(
            servicer.getScheduleByGroupId,
            request_deserializer=scheduleService__pb2.ScheduleRequest.FromString,
            response_serializer=scheduleService__pb2.ScheduleResponse.SerializeToString,
        ),
        'getScheduleTodayByGroupId': grpc.unary_stream_rpc_method_handler(
            servicer.getScheduleTodayByGroupId,
            request_deserializer=scheduleService__pb2.ScheduleRequest.FromString,
            response_serializer=scheduleService__pb2.ScheduleResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'com.project.scheduleService.ScheduleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ScheduleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getScheduleByGroupId(request,
                             target,
                             options=(),
                             channel_credentials=None,
                             call_credentials=None,
                             insecure=False,
                             compression=None,
                             wait_for_ready=None,
                             timeout=None,
                             metadata=None):
        return grpc.experimental.unary_stream(request, target,
                                              '/com.project.scheduleService.ScheduleService/getScheduleByGroupId',
                                              scheduleService__pb2.ScheduleRequest.SerializeToString,
                                              scheduleService__pb2.ScheduleResponse.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout,
                                              metadata)

    @staticmethod
    def getScheduleTodayByGroupId(request,
                                  target,
                                  options=(),
                                  channel_credentials=None,
                                  call_credentials=None,
                                  insecure=False,
                                  compression=None,
                                  wait_for_ready=None,
                                  timeout=None,
                                  metadata=None):
        return grpc.experimental.unary_stream(request, target,
                                              '/com.project.scheduleService.ScheduleService/getScheduleTodayByGroupId',
                                              scheduleService__pb2.ScheduleRequest.SerializeToString,
                                              scheduleService__pb2.ScheduleResponse.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout,
                                              metadata)
