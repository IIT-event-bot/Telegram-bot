# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import services.grpc_service.groupService_pb2 as groupService__pb2


class GroupServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getGroupByGroupId = channel.unary_unary(
            '/com.project.groupService.GroupService/getGroupByGroupId',
            request_serializer=groupService__pb2.GroupRequest.SerializeToString,
            response_deserializer=groupService__pb2.GroupResponse.FromString,
        )
        self.getGroupByTitle = channel.unary_unary(
            '/com.project.groupService.GroupService/getGroupByTitle',
            request_serializer=groupService__pb2.GroupTitleRequest.SerializeToString,
            response_deserializer=groupService__pb2.GroupResponse.FromString,
        )


class GroupServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getGroupByGroupId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getGroupByTitle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GroupServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'getGroupByGroupId': grpc.unary_unary_rpc_method_handler(
            servicer.getGroupByGroupId,
            request_deserializer=groupService__pb2.GroupRequest.FromString,
            response_serializer=groupService__pb2.GroupResponse.SerializeToString,
        ),
        'getGroupByTitle': grpc.unary_unary_rpc_method_handler(
            servicer.getGroupByTitle,
            request_deserializer=groupService__pb2.GroupTitleRequest.FromString,
            response_serializer=groupService__pb2.GroupResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'com.project.groupService.GroupService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class GroupService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getGroupByGroupId(request,
                          target,
                          options=(),
                          channel_credentials=None,
                          call_credentials=None,
                          insecure=False,
                          compression=None,
                          wait_for_ready=None,
                          timeout=None,
                          metadata=None):
        return grpc.experimental.unary_unary(request, target,
                                             '/com.project.groupService.GroupService/getGroupByGroupId',
                                             groupService__pb2.GroupRequest.SerializeToString,
                                             groupService__pb2.GroupResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getGroupByTitle(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        insecure=False,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.project.groupService.GroupService/getGroupByTitle',
                                             groupService__pb2.GroupTitleRequest.SerializeToString,
                                             groupService__pb2.GroupResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
