# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import services.grpc_service.studentService_pb2 as studentService__pb2


class StudentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc_service.Channel.
        """
        self.getUserByStudentId = channel.unary_unary(
                '/com.project.studentService.StudentService/getUserByStudentId',
                request_serializer=studentService__pb2.StudentRequest.SerializeToString,
                response_deserializer=studentService__pb2.UserResponse.FromString,
                )
        self.getStudentsChatIdByGroupId = channel.unary_stream(
                '/com.project.studentService.StudentService/getStudentsChatIdByGroupId',
                request_serializer=studentService__pb2.GroupRequest.SerializeToString,
                response_deserializer=studentService__pb2.UserResponse.FromString,
                )
        self.getStudentById = channel.unary_unary(
                '/com.project.studentService.StudentService/getStudentById',
                request_serializer=studentService__pb2.StudentRequest.SerializeToString,
                response_deserializer=studentService__pb2.StudentResponse.FromString,
                )
        self.getStudentByUserId = channel.unary_unary(
                '/com.project.studentService.StudentService/getStudentByUserId',
                request_serializer=studentService__pb2.UserRequest.SerializeToString,
                response_deserializer=studentService__pb2.StudentResponse.FromString,
                )


class StudentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getUserByStudentId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc_service.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getStudentsChatIdByGroupId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc_service.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getStudentById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc_service.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getStudentByUserId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc_service.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getUserByStudentId': grpc_service.unary_unary_rpc_method_handler(
                    servicer.getUserByStudentId,
                    request_deserializer=studentService__pb2.StudentRequest.FromString,
                    response_serializer=studentService__pb2.UserResponse.SerializeToString,
            ),
            'getStudentsChatIdByGroupId': grpc_service.unary_stream_rpc_method_handler(
                    servicer.getStudentsChatIdByGroupId,
                    request_deserializer=studentService__pb2.GroupRequest.FromString,
                    response_serializer=studentService__pb2.UserResponse.SerializeToString,
            ),
            'getStudentById': grpc_service.unary_unary_rpc_method_handler(
                    servicer.getStudentById,
                    request_deserializer=studentService__pb2.StudentRequest.FromString,
                    response_serializer=studentService__pb2.StudentResponse.SerializeToString,
            ),
            'getStudentByUserId': grpc_service.unary_unary_rpc_method_handler(
                    servicer.getStudentByUserId,
                    request_deserializer=studentService__pb2.UserRequest.FromString,
                    response_serializer=studentService__pb2.StudentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc_service.method_handlers_generic_handler(
            'com.project.studentService.StudentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StudentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getUserByStudentId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc_service.experimental.unary_unary(request, target, '/com.project.studentService.StudentService/getUserByStudentId',
                                                     studentService__pb2.StudentRequest.SerializeToString,
                                                     studentService__pb2.UserResponse.FromString,
                                                     options, channel_credentials,
                                                     insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getStudentsChatIdByGroupId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc_service.experimental.unary_stream(request, target, '/com.project.studentService.StudentService/getStudentsChatIdByGroupId',
                                                      studentService__pb2.GroupRequest.SerializeToString,
                                                      studentService__pb2.UserResponse.FromString,
                                                      options, channel_credentials,
                                                      insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getStudentById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc_service.experimental.unary_unary(request, target, '/com.project.studentService.StudentService/getStudentById',
                                                     studentService__pb2.StudentRequest.SerializeToString,
                                                     studentService__pb2.StudentResponse.FromString,
                                                     options, channel_credentials,
                                                     insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getStudentByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc_service.experimental.unary_unary(request, target, '/com.project.studentService.StudentService/getStudentByUserId',
                                                     studentService__pb2.UserRequest.SerializeToString,
                                                     studentService__pb2.StudentResponse.FromString,
                                                     options, channel_credentials,
                                                     insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
