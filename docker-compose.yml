version: '3.6'

services:
  db:
    image: postgres
    container_name: db_event_bot
    ports:
      - "54321:5432"
    env_file:
      - .env
    restart: on-failure

  redis:
    image: redis
    container_name: event_bot_redis

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "https://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5

  userservice:
    container_name: event_bot_user_service
    build:
      context: user-service
      dockerfile: Dockerfile
    ports:
      - "22000:8000"
      - "8100:8100"
    depends_on:
      - db
      - rabbitmq
    links:
      - db
      - rabbitmq
    env_file:
      - .env
    restart: on-failure

  eventservice:
    container_name: event_bot_event_service
    build:
      context: event-service
      dockerfile: Dockerfile
    ports:
      - "22001:8000"
    depends_on:
      - db
      - rabbitmq
      - userservice
    links:
      - userservice
      - db
      - rabbitmq
    env_file:
      - .env
    restart: on-failure

  scheduleservice:
    container_name: event_bot_schedule_service
    build:
      context: schedule-service
      dockerfile: Dockerfile
    ports:
      - "22002:8000"
      - "8101:8101"
    depends_on:
      - db
      - rabbitmq
      - userservice
    links:
      - userservice
      - db
      - rabbitmq
    env_file:
      - .env
    restart: on-failure

  notificationservice:
    container_name: event_bot_notification_service
    build:
      context: notification-service
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
      - rabbitmq
    links:
      - db
      - rabbitmq
      - redis
    env_file:
      - .env
    restart: on-failure

  telegrambot:
    container_name: event_telegram_bot
    build:
      context: telegram-bot
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - redis
      - userservice
      - scheduleservice
    links:
      - userservice
      - scheduleservice
      - redis
      - rabbitmq
    env_file:
      - .env
    restart: on-failure

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus/
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped
    environment:
      TZ: "Asia/Yekaterinburg"
    networks:
      - default

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

#  nginx:
#    build: nginx/.
#    ports:
#      - "80:80"
#    depends_on:
#      - eventservice
#      - userservice
#    links:
#      - eventservice
#      - userservice