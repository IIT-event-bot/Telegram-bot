version: '3.6'

services:
  db:
    image: postgres
    container_name: db_event_bot
    ports:
      - "2345:5432"
    env_file:
      - .env
    restart: on-failure

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "https://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5

  userservice:
    container_name: event_bot_user_service
    build:
      context: user-service-java
      dockerfile: Dockerfile
    ports:
      - "22000:8000"
      - "8100:8100"
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env
    restart: on-failure

  eventservice:
    container_name: event_bot_event_service
    build:
      context: event-service-java
      dockerfile: Dockerfile
    ports:
      - "22001:8001"
    depends_on:
      - db
      - rabbitmq
      - userservice
    links:
      - userservice
    env_file:
      - .env
    restart: on-failure

  notificationservice:
    container_name: event_bot_notification_service
    build:
      context: notification-service
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
      - rabbitmq
    env_file:
      - .env
    restart: on-failure

  telegrambot:
    container_name: event_telegram_bot
    build:
      context: telegram-bot
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - .env
    restart: on-failure

  redis:
    image: redis
    container_name: event_bot_redis

#  nginx:
#    build: nginx/.
#    ports:
#      - "80:80"
#    depends_on:
#      - eventservice
#      - userservice
#    links:
#      - eventservice
#      - userservice